#!/usr/bin/env ruby
require "net/http"

SESSION_COOKIE = ENV["AOC_SESSION"]

day = ARGV[0].to_i
raise "ðŸ˜¢ expected integer day but got #{ARGV[0]}" unless day > 0

puts "Â» setting up AoC day #{day}"

### CREATE DIRECTORY
dir = day.to_s.rjust(2, "0")
unless Dir.exists? dir
  Dir.mkdir(dir)
  puts "âœ“ created dir #{dir}"
end

### CREATE SAMPLE INPUT
File.open(File.join(dir, "sample.txt"), "w") {}
puts "âœ“ sample input created"

### DOWNLOAD REAL INPUT
input_file = File.join(dir, "input.txt")
unless File.exists? input_file
  raise "ðŸ˜¢ SESSION_COOKIE not present. run \n\tsource .env" if SESSION_COOKIE.nil?

  uri = URI("https://adventofcode.com/2024/day/#{day}/input")
  req = Net::HTTP::Get.new(uri)
  req["Cookie"] = "session=#{SESSION_COOKIE}"
  resp = Net::HTTP.start(uri.hostname, uri.port, use_ssl: true) do |http|
    http.request(req)
  end
  if resp.code != "200"
    raise "ðŸ˜¢ failed to get input:\n[HTTP #{resp.code}] #{resp.message}"
  end

  File.open(input_file, "w") do |file|
    file.write(resp.body)
  end

  puts "âœ“ input downloaded"
end

### SETUP TEMPLATE
CODE_TEMPLATE = """
# https://adventofcode.com/2024/day/#{day}
input = ARGV.include?('-s') ?  'sample.txt' : 'input.txt'
$data = File.read(input).split('\\n')

def debug(msg)
    puts msg if ARGV.include?('-v')
end

""".lstrip

code_file = File.join(dir, "sol.rb")
unless File.exists? code_file
  File.open(code_file, 'w') do |file|
    file.write(CODE_TEMPLATE)
  end
  puts "âœ“ ruby template created"
end

puts "\nðŸš€ GOOOOO! ðŸš€\n"
